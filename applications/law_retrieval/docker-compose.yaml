version: '3'
services:
  auth_mongo: 
    image: mongo
    container_name: mongo_container
    networks:
      - app_network
    ports:
      - 27017:27017
    expose:
      - 27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD
    volumes:
      - ./docker/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    profiles:
      - dev

  neo4j:
    image: neo4j
    container_name: law_retrieval_graph_container
    ports:
      - 7474:7474
      - 7473:7473
      - 7687:7687
    environment:
      - NEO4J_AUTH=none
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_apoc_import_file_use__neo4j__config=true
      # - NEO4J_PLUGINS=["graph-data-science"]
      # - NEO4J_dbms_security_procedures_unrestricted=apoc.*,algo.*
    env_file:
      - .env
    volumes:
      - ./docker/graph/plugins:/var/lib/neo4j/plugins
      - ./docker/graph/data:/data/rdf
      # - ./docker/graph/config/apoc.conf:/var/lib/neo4j/conf/apoc.conf
      # - ./docker/graph/conf:/var/lib/neo4j/conf
    restart: always
    profiles:
      - dev

  law_retrieval:
    image: registry.thinhlh.com/law_retrieval
    container_name: law_retrieval_container
    environment:
      - GRAPH_HOST
      - GRAPH_PORT
      - GRAPH_USER
      - GRAPH_DB
      - GRAPH_PASSWORD

      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_apoc_import_file_use__neo4j__config=true
      - NEO4J_dbms_security_procedures_unrestricted=apoc.\\\*
      - NEO4J_server_config_strict__validation_enabled=false
      - NEO4J_dbms_unmanaged__extension__classes=n10s.endpoint=/rdf
    ports:
      - 8004:80
    networks:
      - app_network
    restart: on-failure

networks:
  app_network:
    name: app_network
    driver: bridge
    # external: true